package core.dc;

import javafx.util.Pair;

/**
 * Copyright : all rights reserved,rapidhere@gmail.com
 * Mail: rapidhere@gmail.com
 * Class :
 * Version :
 * Usage :
 */
public interface CatchAlgorithm <T extends Token> {
    /**
     * Dump list of tokens into bytes and then we can retrieve these tokens from load function
     * NOTE: this function isn't used to dump tokens into original format
     *       compress and decompress function can use this function to dump bytes sequence if
     *       there dc info have token sequence
     * @param tokens tokens to dump
     * @return dumped bytes
     */
    byte[] dump(T[] tokens);

    /**
     * Load token list from bytes array generated by dump function
     * NOTE: this function isn't used to load tokens from original format
     *      compress and decompress function can use this function to load tokens if
     *      there dc info have token sequence
     * @param bytes byte array
     * @param offset start offset
     * @param length length of byte
     * @return tokens list and remain offset
     */
    Pair<T[], Integer> load(byte[] bytes, int offset, int length);

    /**
     * parse token list from bytes array
     * @param bytes byte array
     * @param offset start offset
     * @param length length of byte
     * @return tokens list and remain offset
     */
    Pair<T[], Integer> parse(byte[] bytes, int offset, int length);
}
